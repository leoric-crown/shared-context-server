# Simplified testing workflow with memory-only database testing
name: Simplified Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        backend: ["aiosqlite", "sqlalchemy"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        uv sync --all-extras

    - name: Run simplified database tests
      env:
        # No need for DATABASE_PATH, USE_SQLALCHEMY, or CI detection
        # Everything uses memory databases
        PYTEST_BACKEND: ${{ matrix.backend }}
      run: |
        uv run pytest tests/test_simplified_backend_switching.py -v --backend=${{ matrix.backend }}

    - name: Run all tests with backend
      env:
        PYTEST_BACKEND: ${{ matrix.backend }}
      run: |
        uv run pytest tests/ -x --backend=${{ matrix.backend }} \
          --ignore=tests/test_backend_switching.py  # Skip old complex tests

    - name: Run quality checks
      run: |
        uv run ruff check
        uv run mypy src/

  integration:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        uv sync --all-extras

    - name: Run integration tests (memory databases)
      run: |
        uv run pytest tests/integration/ -v
        uv run pytest tests/behavioral/ -v
