# CI workflow aligned with make quality && make test-all
name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  # Test environment variables (consistent with existing CI)
  API_KEY: "test-api-key-for-ci-only"
  DATABASE_URL: "sqlite:///:memory:"
  ENVIRONMENT: "testing"
  JWT_SECRET_KEY: "test-jwt-secret-key-for-ci-only-not-for-production"
  JWT_ENCRYPTION_KEY: "3LBG8-a0Zs-JXO0cOiLCLhxrPXjL4tV5-qZ6H_ckGBY="

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        backend: ["aiosqlite", "sqlalchemy"]
        include:
          - python-version: "3.12"
            backend: "sqlalchemy"
            upload-coverage: true

    steps:
    - uses: actions/checkout@v4

    - name: Setup uv with cache
      uses: astral-sh/setup-uv@v4
      with:
        python-version: ${{ matrix.python-version }}
        enable-cache: false  # Temporarily disabled due to GitHub cache service issues

    - name: Install dependencies
      run: uv sync --all-extras

    - name: Run quality checks (aligned with make quality)
      if: matrix.backend == 'aiosqlite'
      run: |
        uv run ruff format
        uv run ruff check --fix
        uv run mypy src
        uv run pip-audit

    - name: Run simplified backend tests (covers both backends)
      run: |
        uv run pytest tests/test_simplified_backend_switching.py -v

    - name: Run smoke tests (${{ matrix.backend }} backend)
      env:
        USE_SQLALCHEMY: ${{ matrix.backend == 'sqlalchemy' }}
      run: |
        uv run pytest tests/test_smoke.py -q

    - name: Run integration and behavioral tests (once per Python version)
      if: matrix.backend == 'aiosqlite'
      run: |
        uv run pytest tests/integration/ tests/behavioral/ -q

    - name: Run comprehensive test suite (${{ matrix.backend }} backend)
      env:
        USE_SQLALCHEMY: ${{ matrix.backend == 'sqlalchemy' }}
      run: |
        uv run pytest tests/ \
          --cov=src \
          --cov-report=xml \
          --cov-report=term-missing \
          -q \
          --maxfail=3 \
          --tb=short \
          --ignore=tests/test_simplified_backend_switching.py

    - name: Upload coverage
      if: matrix.upload-coverage
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unit
        name: ci-${{ matrix.python-version }}
        fail_ci_if_error: false
