# Docker Compose Production Configuration
# Optimized for production deployment with security and reliability
services:
  shared-context-server:
    # Use published image instead of building locally
    image: ghcr.io/shared-context-server/server:latest
    container_name: shared-context-server-prod
    restart: always

    ports:
      - "23456:23456"

    volumes:
      - shared-context-data:/app/data
      - shared-context-logs:/app/logs

    environment:
      # Production environment
      - ENVIRONMENT=production
      - DEBUG=false
      - LOG_LEVEL=INFO

      # Database configuration
      - DATABASE_PATH=/app/data/chat_history.db

      # Security - MUST be set via .env file or environment
      - API_KEY=${API_KEY:?API_KEY must be set for production}

      # Server configuration
      - HTTP_PORT=23456
      - HTTP_HOST=0.0.0.0
      - MCP_CLIENT_HOST=${MCP_CLIENT_HOST:-localhost}

      # Production optimizations
      - ENABLE_PERFORMANCE_MONITORING=true
      - MAX_SESSIONS_PER_AGENT=100
      - MAX_MESSAGES_PER_SESSION=10000

      # Resource limits
      - MAX_MEMORY_ENTRIES_PER_AGENT=2000
      - MAX_MEMORY_SIZE_MB=200

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:23456/health"]
      interval: 300s
      timeout: 10s
      retries: 3
      start_period: 10s

    # Production resource limits
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

    # Security configuration
    security_opt:
      - no-new-privileges:true

    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  shared-context-data:
    driver: local
    # Production: Use named volume with backup strategy

  shared-context-logs:
    driver: local
