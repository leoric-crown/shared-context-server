# Shared Context MCP Server - Development Configuration
# Provides development environment with hot reload and shared database

services:
  shared-context-server:
    # Build locally from source for development
    build:
      context: .
      dockerfile: Dockerfile
    container_name: shared-context-server
    restart: unless-stopped
    # Ports: internal ports are fixed (HTTP 23456, WS 34567).
    # Map host ports via env only; keep container internals static.
    ports:
      - "${HTTP_PORT:-23456}:23456"
      - "${WEBSOCKET_PORT:-34567}:34567"
    volumes:
      # Development: Share database with host for easy access
      - ./:/app/host
      # Mount source code for hot reload
      - ./src:/app/src:ro
      # Logs
      - shared-context-logs:/app/logs
    environment:
      # Database configuration - shared with host
      - DATABASE_PATH=/app/host/chat_history.db

      # Security configuration
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-dev-admin-password}
      - API_KEY=${API_KEY:-dev-key-please-change}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-dev-jwt-secret-please-change}
      - JWT_ENCRYPTION_KEY=${JWT_ENCRYPTION_KEY:-dev-fernet-key-please-change}
      - CORS_ORIGINS=${CORS_ORIGINS:-*}

      # Server configuration
      - MCP_TRANSPORT=http
      - LOG_LEVEL=${LOG_LEVEL:-DEBUG}
      - HTTP_PORT=23456
      - HTTP_HOST=0.0.0.0
      - EXTERNAL_HTTP_PORT=${HTTP_PORT:-23456}
      - MCP_CLIENT_HOST=${MCP_CLIENT_HOST:-localhost}

      # WebSocket configuration
      - WEBSOCKET_ENABLED=${WEBSOCKET_ENABLED:-true}
      - WEBSOCKET_HOST=0.0.0.0
      - WEBSOCKET_PORT=34567
      # Reflect host-mapped port for links/UI
      - EXTERNAL_WEBSOCKET_PORT=${WEBSOCKET_PORT:-34567}

      # Development environment
      - ENVIRONMENT=development
      - DEBUG=true
      - PYTHONPATH=/app/src

    # Use development server with hot reload
    command: ["python", "-m", "shared_context_server.scripts.dev"]

    healthcheck:
      test: ["CMD", "sh", "-c", "curl -f http://localhost:23456/health && curl -f http://localhost:34567/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

    # Resource limits (generous for development)
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

volumes:
  # Optional: Persistent storage for logs
  shared-context-logs:
    driver: local

# Networks (using default bridge network for simplicity)
# All MCP clients connect to http://localhost:23456/mcp/
# Hot reload enabled - server restarts on file changes
