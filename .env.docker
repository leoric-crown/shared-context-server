# Docker-specific environment configuration
# Copy this to .env for Docker Compose deployment
# Based on .env.minimal but optimized for containers

# =============================================================================
# üîí SECURITY (REQUIRED) - Generate unique values before production use
# =============================================================================

# Generate with: scs setup export json
API_KEY=REPLACE_WITH_GENERATED_KEY

# Generate with: scs setup export json
JWT_SECRET_KEY=REPLACE_WITH_GENERATED_KEY

# Generate with: scs setup export json
JWT_ENCRYPTION_KEY=REPLACE_WITH_GENERATED_KEY

# Web Dashboard Admin Password (REQUIRED for dashboard access)
ADMIN_PASSWORD=REPLACE_WITH_SECURE_ADMIN_PASSWORD

# =============================================================================
# ‚öôÔ∏è DOCKER-SPECIFIC CONFIGURATION
# =============================================================================

# Database location (Docker volume mount)
DATABASE_PATH=/app/data/chat_history.db

# Server configuration
HTTP_PORT=23456
LOG_LEVEL=INFO
ENVIRONMENT=production
DEBUG=false

# MCP client connection
MCP_CLIENT_HOST=localhost

# CORS origins (restrict for production)
CORS_ORIGINS=*

# WebSocket port
WEBSOCKET_PORT=34567

# =============================================================================
# üöÄ DOCKER RESOURCE LIMITS (Used by application)
# =============================================================================

# Agent and session limits
MAX_SESSIONS_PER_AGENT=100
MAX_MESSAGES_PER_SESSION=10000
MAX_MEMORY_ENTRIES_PER_AGENT=2000

# Performance monitoring and cleanup
ENABLE_PERFORMANCE_MONITORING=true
ENABLE_AUTOMATIC_CLEANUP=true

# =============================================================================
# üîÑ DOCKER SETUP COMMANDS
# =============================================================================
#
# 1. Copy this template:
#    cp .env.docker .env
#
# 2. Generate and update keys:
#    scs setup export json  # Get keys, manually update above values
#
# 3. Or use automated setup:
#    scs setup docker  # Generates .env.generated, copy to .env
#
# 4. Start containers:
#    docker compose up -d
#
