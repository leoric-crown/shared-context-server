# CodeQL Configuration for Shared Context Server
# This configuration tells CodeQL about our custom sanitization functions

name: "shared-context-server-security"

paths-ignore:
  - tests/
  - scripts/
  - docs/

# Custom sanitizer configuration
# CodeQL should recognize these functions as security barriers
security:
  sanitizers:
    # Sanitization functions that make data safe for logging
    - name: "sanitize_for_logging"
      module: "shared_context_server.utils.security"
      description: "Sanitizes sensitive strings for safe logging"
    - name: "sanitize_agent_id"
      module: "shared_context_server.utils.security"
      description: "Sanitizes agent IDs for logging"
    - name: "sanitize_client_id"
      module: "shared_context_server.utils.security"
      description: "Sanitizes client IDs for logging"
    - name: "sanitize_cache_key"
      module: "shared_context_server.utils.security"
      description: "Sanitizes cache keys by removing sensitive data"
    - name: "sanitize_token"
      module: "shared_context_server.utils.security"
      description: "Sanitizes JWT tokens and API keys for logging"
    - name: "sanitize_resource_uri"
      module: "shared_context_server.utils.security"
      description: "Sanitizes resource URIs containing sensitive identifiers"
    - name: "secure_log_debug"
      module: "shared_context_server.utils.security"
      description: "Secure debug logging with assumed sanitized inputs"
    - name: "secure_log_info"
      module: "shared_context_server.utils.security"
      description: "Secure info logging with assumed sanitized inputs"

queries:
  # Disable queries for our sanitization functions
  - exclude:
      id: py/clear-text-logging-sensitive-data
      from:
        - shared_context_server/utils/security.py
