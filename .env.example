# Shared Context MCP Server - Implemented Configuration
# Copy this file to .env and update with your actual values
#
# IMPORTANT: Add .env to .gitignore to prevent credential exposure
#
# This file contains ONLY implemented environment variables.
# For quick start, use .env.minimal instead (12 essential variables only).

# ============================================================================
# üîí AUTHENTICATION & SECURITY (REQUIRED)
# ============================================================================

# API key for agent authentication (REQUIRED - generate secure random key)
# Generate with: openssl rand -base64 32
API_KEY=your-secure-api-key-replace-this-in-production

# JWT secret key for token-based authentication (REQUIRED)
# Generate with: openssl rand -base64 32
JWT_SECRET_KEY=your-jwt-secret-key-replace-this-in-production

# JWT encryption key for secure token storage (REQUIRED for secure tokens)
# Generate with: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
JWT_ENCRYPTION_KEY=your-fernet-encryption-key-replace-this-in-production

# JWT token expiration time (in seconds)
JWT_EXPIRATION_TIME=86400

# Session security settings
SESSION_TIMEOUT=3600

# Web Dashboard Authentication (REQUIRED for admin access)
# Password for accessing the web dashboard - grants full admin visibility
# Set this to enable authentication for the admin dashboard
ADMIN_PASSWORD=your-admin-dashboard-password

# Dashboard session secret (optional - auto-generated if not provided)
# Generate with: openssl rand -base64 32
# DASHBOARD_SECRET=your-dashboard-session-secret
MAX_SESSIONS_PER_AGENT=50

# CORS origins (comma-separated list)
CORS_ORIGINS=*

# Allowed hosts (comma-separated list) - configured but not enforced
ALLOWED_HOSTS=localhost,127.0.0.1

# ============================================================================
# üóÑÔ∏è DATABASE CONFIGURATION
# ============================================================================

# Database path (SQLite)
DATABASE_PATH=./chat_history.db

# Database URL (alternative to DATABASE_PATH)
# SQLite: sqlite:///./chat_history.db
# PostgreSQL: postgresql+asyncpg://user:pass@localhost/dbname
DATABASE_URL=sqlite:///./chat_history.db

# Database connection settings
DATABASE_MAX_CONNECTIONS=20
DATABASE_MIN_CONNECTIONS=2
DATABASE_TIMEOUT=30
DATABASE_BUSY_TIMEOUT=5

# Data retention policies (in days)
AUDIT_LOG_RETENTION_DAYS=30
INACTIVE_SESSION_RETENTION_DAYS=7

# ============================================================================
# ‚öôÔ∏è MCP SERVER CONFIGURATION
# ============================================================================

# MCP server identification
MCP_SERVER_NAME=shared-context-server
MCP_SERVER_VERSION=1.0.0

# Server transport configuration
MCP_TRANSPORT=http

# HTTP transport settings
HTTP_HOST=localhost
HTTP_PORT=23456

# WebSocket server configuration
WEBSOCKET_ENABLED=true
WEBSOCKET_HOST=127.0.0.1
WEBSOCKET_PORT=34567

# Client-accessible hostname (for MCP client configuration)
MCP_CLIENT_HOST=localhost

# ============================================================================
# üìã LOGGING & MONITORING
# ============================================================================

# Logging configuration
LOG_LEVEL=INFO
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s
DATABASE_LOG_LEVEL=INFO

# Performance monitoring (limited SQLAlchemy stats only)
ENABLE_PERFORMANCE_MONITORING=true
PERFORMANCE_LOG_INTERVAL=300

# ============================================================================
# üìä RESOURCE LIMITS
# ============================================================================

# Agent memory limits
MAX_MEMORY_ENTRIES_PER_AGENT=1000
MAX_MEMORY_SIZE_MB=100

# Message limits
MAX_MESSAGE_LENGTH=100000
MAX_MESSAGES_PER_SESSION=10000

# Metadata size limits
MAX_METADATA_SIZE_KB=10

# Cleanup settings
ENABLE_AUTOMATIC_CLEANUP=true
CLEANUP_INTERVAL=3600

# ============================================================================
# üîß DEVELOPMENT & ENVIRONMENT
# ============================================================================

# Environment mode
ENVIRONMENT=development

# Debug settings (disable in production)
DEBUG=false
ENABLE_DEBUG_TOOLS=false

# Development database settings (configured but not actively used)
DEV_RESET_DATABASE_ON_START=false
DEV_SEED_TEST_DATA=false

# Testing configuration
TEST_DATABASE_PATH=./test_chat_history.db

# ============================================================================
# ‚ùå FEATURES NOT YET IMPLEMENTED
# ============================================================================

# The following features are documented in various guides but NOT implemented:
# - In-memory caching system (exists but uses hardcoded values)
# - Health checks and metrics collection
# - Automatic backup and recovery
# - Rate limiting and advanced security headers
# - Agent coordination and session locking
# - Resource monitoring and alerting

# For these features, see the project roadmap or consider contributing!

# ============================================================================
# üìù QUICK SETUP CHECKLIST
# ============================================================================

# SECURITY CHECKLIST:
# ‚ñ° Replace API_KEY with: openssl rand -base64 32
# ‚ñ° Replace JWT_SECRET_KEY with: openssl rand -base64 32
# ‚ñ° Replace JWT_ENCRYPTION_KEY with: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
# ‚ñ° Set appropriate LOG_LEVEL for your environment
# ‚ñ° Configure CORS_ORIGINS appropriately for production (not *)
# ‚ñ° Set ENVIRONMENT=production for production deployments
# ‚ñ° Set DEBUG=false for production

# QUICK START:
# For minimal setup, use .env.minimal instead (12 essential variables only)
